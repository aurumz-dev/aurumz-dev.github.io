---
export interface Props {
  id?: string;
  content?: string;
  images?: string[];
  reverse?: boolean;
}
const {
  id = "second-section",
  content = "",
  images = ["/default-image2.jpg"], // pass any number of images here
  reverse = false,
} = Astro.props;
---

<section id={id} class={`second-section hidden`}>
  <div class={`content ${reverse ? "reverse" : ""}`}>
    <div class="text">
      <p>{content}</p>
    </div>
    <div class="images-row">
      {/* Lottie animation always first */}
      <div class="image-wrapper">
        <lottie-player
          src="/lottie/hammy.json"
          background="transparent"
          speed="1"
          style="width: 80%; height: auto; margin-top: 70px;"
          loop
          autoplay
        ></lottie-player>
      </div>

      {/* Render all images passed in the images array */}
      {images.map((src, index) => (
        <div class="image-wrapper" key={index}>
          <img src={src} alt={`Section image ${index + 1}`} />
        </div>
      ))}
    </div>
  </div>
</section>

<script type="module">
  window.addEventListener('DOMContentLoaded', () => {
    const section = document.getElementById("second-section");
    if (!section) return;

    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          section.classList.add('visible');
          section.classList.remove('hidden');
          observer.disconnect();
        }
      });
    }, { threshold: 0.1 });

    observer.observe(section);
  });
</script>

<style>
  .second-section {
    padding: 0 0; /* vertical padding only, no horizontal */
    background: #0e0e0e;
    height: 380px;
    width: 100vw;
    box-sizing: border-box;
    border-top: 2px solid #ffffff0d;   /* top line */
    border-bottom: 2px solid #ffffff0d;
    transition: opacity 1s ease, transform 1s ease;
  }

  .content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 7rem;
    flex-wrap: nowrap;
    max-width: 40vw;
    margin: 0 auto;
    padding: 10 1rem; /* slight padding inside to prevent edge overflow */
  }

  .content.reverse {
    flex-direction: row-reverse;
  }

  .text {
    flex: 1;
    min-width: 300px;
  }

  .text p {
    font-size: 1.3rem;
    line-height: 1.6;
    color: #ccc;
  }

  .images-row {
    display: flex;
    gap: 50rem;
    flex: 2;
    flex-wrap: nowrap;
  }

  .image-wrapper {
    flex: 1 1 50%;
    max-width: 100vw;
    margin-left: -30vw; 
  }

  .image-wrapper img,
  .image-wrapper lottie-player {
    width: 100%;
    height: auto;
    display: block;
    border-radius: 0;
    object-fit: cover;
    margin-top: 60px; /* pushes image or animation down */
  }

  @media (max-width: 768px) {
    .content, .images-row {
      flex-wrap: wrap;
    }
    .image-wrapper {
      max-width: 100%;
      flex-basis: 100%;
      margin-left: 0; /* reset margin on mobile */
    }
  }

  /* Animation classes */
  .second-section.hidden {
    opacity: 0;
  }

  .second-section.visible {
    opacity: 1;
    transition: opacity 5s ease;
  }

  .second-section {
    transition: opacity 2s ease;
  }
</style>
